class Solution {
    public boolean matches(String s, String p, int i, int j, Boolean[][] memory) {
        // Base cases
        if (i >= s.length() && j >= p.length()) {
            return true;
        } else if (j >= p.length()) {
            return false;
        }

        // Check if we have already computed the result
        if (memory[i][j] != null) {
            return memory[i][j];
        }

        boolean matches = i < s.length() && (s.charAt(i) == p.charAt(j) || p.charAt(j) == '.');
        boolean isAMatch;

        if (j < p.length() - 1 && p.charAt(j + 1) == '*') {
            isAMatch = (matches && matches(s, p, i + 1, j, memory)) || matches(s, p, i, j + 2, memory);
        } else {
            isAMatch = matches && matches(s, p, i + 1, j + 1, memory);
        }

        // We register the result in memory
        memory[i][j] = isAMatch;

        return isAMatch;
    }

    public boolean isMatch(String s, String p) {
        Boolean[][] memory = new Boolean[s.length() + 1][p.length()];
        return matches(s, p, 0, 0, memory);
    }
}
